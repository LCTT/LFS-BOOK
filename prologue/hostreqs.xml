<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="pre-hostreqs" xreflabel="Host System Requirements">
  <?dbhtml filename="hostreqs.html"?>

  <title>宿主系统需求</title>

    <para>你的宿主机应该安装有以下的软件包，且软件包的版本不能低于标注的版本。对于大部分现代 Linux 来说应该不是什么问题。不少发行版可能会将开发用到的头文件单独打包，并且命名为 <quote>&lt;package-name&gt;-devel</quote> 或是  <quote>&lt;package-name&gt;-dev</quote>这样的形式。务必保证这样的包都已经装上！</para>

   <para>可能某些软件包的版本低于以下标注的版本也可以工作，不过我们不能一一测试。</para>

  <itemizedlist spacing="compact">

    <listitem>
      <para><emphasis role="strong">Bash-3.2</emphasis>（/bin/sh 应该是到 bash 的符号链接或硬链接）</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Binutils-2.17</emphasis> （不推荐安装  &binutils-version; 以上的版本，它们没有经过测试，并不敢保证没有问题）</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bison-2.3</emphasis>（/usr/bin/yacc 应该是一个到 bison 的链接或者是一个执行 bison 的脚本）</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bzip2-1.0.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Coreutils-6.9</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Diffutils-2.8.1</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Findutils-4.2.31</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gawk-4.0.1</emphasis>（/usr/bin/awk 应该是到 gawk 的链接）</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">GCC-4.1.2</emphasis>包括 C++ 编译器、<command>g++</command>（不推荐安装 &gcc-version; 以上的版本，它们没有经过测试，并不敢保证没有问题）</para>

      <note><para>有报告称，部分发行版使用的 gcc 库存在缺失或者是不一致的情况。这一情况可能会干扰到一些 LFS 软件包的构建。请检查 /usr/lib 或是 /usr/lib64 下是否存在 libgmp.la、libmpfr.la 和 libmpc.la。这三个文件应该要么都存在，要么都没有，而不是只有一两个。假如你的系统有这样的问题，要么重命名或删除这些文件（并重新安装 GCC），要么安装缺少的软件包。</para></note>

    </listitem>

    <listitem>
      <para><emphasis role="strong">Glibc-2.11</emphasis>（不推荐安装  &glibc-version; 以上的版本，它们都没有经过测试，并不敢保证没有问题）</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Grep-2.5.1a</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gzip-1.3.12</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Linux Kernel-&min-kernel;</emphasis></para>

      <para>之所以指定使用这一版本的内核，是因为在第六章需要构建  <application>glibc</application>，开发人员有此建议。同时，编译 udev 也同样依赖于此版本的内核。</para>

      <para>如果当前宿主机的内核版本早于 &min-kernel; ，也许需要先升级到更新的版本。升级方法有两种：假如你的系统维护者有提供更新版本的内核，那么直接升级就可以了；假如你的系统维护者没有提供 &min-kernel; 或更新版本的内核，或者你不想安装它，那么你需要自己编译内核。<xref linkend="chapter-bootable"/> 将指导你如何编译内核和设置系统的启动配置（这里假定你使用 GRUB）。</para>

    </listitem>

    <listitem>
      <para><emphasis role="strong">M4-1.4.10</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Make-3.81</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Patch-2.5.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Perl-5.8.8</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Sed-4.1.5</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Tar-1.18</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Texinfo-4.7</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Xz-5.0.0</emphasis></para>
    </listitem>

  </itemizedlist>

  <para>需要注意的是，通过学习本文构建 LFS 系统，必须包含上文提及的所有文件链接。那些链接假如指向其它的软件（例如 dash，mawk 等） ，也许依旧可以构建系统，但是开发团队并没有做过系统的测试，而且可能会在执行一些命令或者应用某些补丁的时候出现问题。（译者注：这句话的本义是，本书建议构建 LFS 建议使用的 sh 应该是 bash，但是假如你喜欢 dash，这并不一定不行，但是假如出问题，那也是在情理之中的事情。）</para>

  <!-- Use an empty sect2 element to prevent a pdf warning.  -->
  <sect2 id="version-check" xreflabel="Section vii, Host System Requirements">
  <title> </title>

  <para >请执行以下命令，查看宿主机的各个软件包的版本以及编译环境是否准备妥当：</para>

<!-- ANY additional lines in the script cause a pdf rendering problem-->
<screen role="nodump"><userinput>cat &gt; version-check.sh &lt;&lt; "EOF"
<literal>#!/bin/bash
# Simple script to list version numbers of critical development tools
export LC_ALL=C
bash --version | head -n1 | cut -d" " -f2-4
echo "/bin/sh -&gt; `readlink -f /bin/sh`"
echo -n "Binutils: "; ld --version | head -n1 | cut -d" " -f3-
bison --version | head -n1

if [ -h /usr/bin/yacc ]; then
  echo "/usr/bin/yacc -> `readlink -f /usr/bin/yacc`";
elif [ -x /usr/bin/yacc ]; then
  echo yacc is `/usr/bin/yacc --version | head -n1`
else
  echo "yacc not found"
fi

bzip2 --version 2&gt;&amp;1 &lt; /dev/null | head -n1 | cut -d" " -f1,6-
echo -n "Coreutils: "; chown --version | head -n1 | cut -d")" -f2
diff --version | head -n1
find --version | head -n1
gawk --version | head -n1

if [ -h /usr/bin/awk ]; then
  echo "/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`";
elif [ -x /usr/bin/awk ]; then
  echo awk is `/usr/bin/awk --version | head -n1`
else
  echo "awk not found"
fi

gcc --version | head -n1
g++ --version | head -n1
ldd --version | head -n1 | cut -d" " -f2-  # glibc version
grep --version | head -n1
gzip --version | head -n1
cat /proc/version
m4 --version | head -n1
make --version | head -n1
patch --version | head -n1
echo Perl `perl -V:version`
sed --version | head -n1
tar --version | head -n1
makeinfo --version | head -n1
xz --version | head -n1

echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c
if [ -x dummy ]
  then echo "g++ compilation OK";
  else echo "g++ compilation failed"; fi
rm -f dummy.c dummy</literal>
EOF

bash version-check.sh</userinput></screen>

  <para>同时，还请进行库文件的一致性检查：</para>

<screen role="nodump"><userinput>cat &gt; library-check.sh &lt;&lt; "EOF"
<literal>#!/bin/bash
for lib in lib{gmp,mpfr,mpc}.la; do
  echo $lib: $(if find /usr/lib* -name $lib|
               grep -q $lib;then :;else echo not;fi) found
done
unset lib</literal>
EOF

bash library-check.sh</userinput></screen>

<para>这些文件应该要么都在或者是都缺失，而不应该只有一两个。</para>


</sect2>
</sect1>
