<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-binutils-pass1" role="wrap">
  <?dbhtml filename="binutils-pass1.html"?>

  <sect1info condition="script">
    <productname>binutils</productname>
    <productnumber>&binutils-version;</productnumber>
    <address>&binutils-url;</address>
  </sect1info>

  <title>Binutils-&binutils-version; - 第 1 遍</title>

  <indexterm zone="ch-tools-binutils-pass1">
    <primary sortas="a-Binutils">Binutils</primary>
    <secondary>tools, pass 1</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../chapter06/binutils.xml"
    xpointer="xpointer(/sect1/sect2[1]/para[1])"/>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&binutils-ch5p1-sbu;</seg>
        <seg>&binutils-ch5p1-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>安装交叉编译的 Binutils</title>

    <note><para>返回前面章节重新阅读注意事项。了解标记为重要的注意事项能在后面帮你省去很多麻烦。</para></note>

    <para>第一个编译的软件包是 Binutils 软件包，这点很重要，因为 Glibc 和 GCC 都会对可用的链接器和汇编器执行各种测试，以决定启用它们自身的哪些功能。</para>

    <para>Binutils 手册建议，在源码目录之外一个专门的编译目录里面编译 Binutils：</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <note>
      <para>为了衡量在本书中其余部分所使用 SBU 值，我们要测量一下这个软件包从配置到包括第一次安装在内的编译时间。为了轻松的做到这点，会用类似 <userinput>time { ./configure ... &amp;&amp; ...
      &amp;&amp; make install; }</userinput> 的方式将命令包裹在 <command>time</command> 命令中。</para>
    </note>

    <note><para>第五章中，大致的构建 SBU 值和所需磁盘空间不包括测试套件数据。</para></note>

    <para>现在准备编译 Binutils：</para>

<screen><userinput remap="configure">../configure --prefix=/tools            \
             --with-sysroot=$LFS        \
             --with-lib-path=/tools/lib \
             --target=$LFS_TGT          \
             --disable-nls              \
             --disable-werror</userinput></screen>


    <variablelist>
      <title>配置选项的含义：</title>

      <varlistentry>
        <term><parameter>--prefix=/tools</parameter></term>
        <listitem>
          <para>告诉配置脚本将 Binutils 程序安装到 <filename class="directory">/tools</filename> 文件夹。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-sysroot=$LFS</parameter></term>
        <listitem>
          <para>用于交叉编译，告诉编译系统在 $LFS 中查找所需的目标系统库。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-lib-path=/tools/lib</parameter></term>
        <listitem>
          <para>指定需要配置使用的链接器的库路径。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><envar>--target=$LFS_TGT</envar></term>
        <listitem>
          <para>因为 <envar>LFS_TGT</envar> 变量中的机器描述和 <command>config.guess</command> 脚本返回的值略有不同，这个选项会告诉 <command>configure</command> 脚本调整 Binutils 的构建系统来构建一个交叉链接器。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-nls</parameter></term>
        <listitem>
          <para>这会禁止国际化（i18n），因为国际化对临时工具来说没有必要。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-werror</parameter></term>
        <listitem>
          <para>这会防止来自宿主编译器的警告事件导致停止编译。</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>继续编译软件包：</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>现在编译完成了。通常现在我们会运行测试套件，但在这个初期阶段，测试套件框架（Tcl、Expect 和 DejaGNU）还没有就绪。在此进行测试的收效甚微，因为第一遍编译的程序很快会被第二遍的代替。</para>

    <para>如果是在 x86_64 上构建，创建符号链接，以确保工具链的完整性：</para>

<screen><userinput remap="install">case $(uname -m) in
  x86_64) mkdir -v /tools/lib &amp;&amp; ln -sv lib /tools/lib64 ;;
esac</userinput></screen>

    <para>安装软件包:</para>

<screen><userinput remap="install">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>该软件包的详细信息位于 <xref linkend="contents-binutils"/>。</para>

  </sect2>

</sect1>
