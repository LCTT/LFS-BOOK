<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-expect" role="wrap">
  <?dbhtml filename="expect.html"?>

  <sect1info condition="script">
    <productname>expect</productname>
    <productnumber>&expect-version;</productnumber>
    <address>&expect-url;</address>
  </sect1info>

  <title>Expect-&expect-version;</title>

  <indexterm zone="ch-tools-expect">
    <primary sortas="a-Expect">Expect</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Expect 软件包包含一个实现用脚本和其他交互式程序进行对话的程序。</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&expect-ch5-sbu;</seg>
        <seg>&expect-ch5-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>安装 Expect</title>

    <para>首先，强制 Expect 的 configure 配置脚本使用 <filename>/bin/stty</filename> 替代宿主机系统里可能存在的 <filename>/usr/local/bin/stty</filename> 。这样可以保证我们的测试套件工具在工具链的最后一次构建能够正常。</para>

<screen><userinput remap="pre">cp -v configure{,.orig}
sed 's:/usr/local/bin:/bin:' configure.orig &gt; configure</userinput></screen>

    <para>现在配置 Expect 准备编译：</para>

<screen><userinput remap="configure">./configure --prefix=/tools       \
            --with-tcl=/tools/lib \
            --with-tclinclude=/tools/include</userinput></screen>

    <variablelist>
      <title>配置脚本参数的含义：</title>

      <varlistentry>
        <term><parameter>--with-tcl=/tools/lib</parameter></term>
        <listitem>
          <para>这个选项可以保证 configure 配置脚本会从临时工具目录里找 Tcl 的安装位置，而不是在宿主机系统中寻找。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-tclinclude=/tools/include</parameter></term>
        <listitem>
          <para>这个选项会给 Expect 显式地指定 Tcl 内部头文件的位置。通过这个选项可以避免 <command>configure</command> 脚本不能自动发现 Tcl 头文件位置的情况。</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>编译软件包：</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>现在编译已经完成。之前说过，不要求为本章中所构建的临时工具运行测试套件。不过你仍然要测试 Expect 的话可以用下面的命令：</para>

<screen><userinput remap="test">make test</userinput></screen>

    <para>请注意 Expect 测试套件已知在某些宿主机特定情况下有过失败的情况，我们还没有完全把握。不过，在这里测试套件运行失败并不奇怪，也不认为是关键问题。</para>

    <para>安装软件包：</para>

<screen><userinput remap="install">make SCRIPTS="" install</userinput></screen>

    <variablelist>
      <title>make 参数的含义：</title>

      <varlistentry>
        <term><parameter>SCRIPTS=""</parameter></term>
        <listitem>
          <para>这个变量可以避免安装额外的、没有需求的 Expect 脚本。</para>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

  <sect2 id="contents-expect" role="content">
    <title> Expect 软件包内容</title>

    <segmentedlist>
      <segtitle>安装的程序</segtitle>
      <segtitle>安装的库</segtitle>

      <seglistitem>
        <seg>expect</seg>
        <seg>libexpect-&expect-lib-version;.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">简要介绍</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="expect">
        <term><command>expect</command></term>
        <listitem>
          <para>基于脚本和其他交互式程序通信。</para>
          <indexterm zone="ch-tools-expect expect">
            <primary sortas="b-expect">expect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libexpect">
        <term><filename class="libraryfile">libexpect-&expect-lib-version;.so</filename></term>
        <listitem>
          <para>包含一些函数允许 Expect 用作 Tcl 扩展或直接用于 C/C++（不用 Tcl）。</para>
          <indexterm zone="ch-tools-expect libexpect">
            <primary sortas="c-libexpect-&expect-lib-version;">libexpect-&expect-lib-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
