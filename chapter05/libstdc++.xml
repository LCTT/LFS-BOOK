<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-libstdcpp" role="wrap">
  <?dbhtml filename="gcc-libstdc++.html"?>

  <sect1info condition="script">
    <productname>gcc</productname>
    <productnumber>&gcc-version;</productnumber>
    <address>&gcc-url;</address>
  </sect1info>

  <title>GCC-&gcc-version; 中的 Libstdc++</title>

  <indexterm zone="ch-tools-libstdcpp">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>tools, libstdc++</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Libstdc++ 是标准的 C++ 库。需要用它来编译 C++ 代码（GCC 的一部分是用 C++ 写的），但是在构建 <xref linkend="ch-tools-gcc-pass1"/> 时，我们需要推迟它的安装进程，因为依赖的 glibc，还未部署在 /tools 目录中。</para>
    
    <para>Libstdc++ 是标准的 C++ 库。g++ 编译器正确运行需要它。</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&libstdcpp-ch5-sbu;</seg>
        <seg>&libstdcpp-ch5-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>安装目标 Libstdc++</title>

    <note>
      <para><application>Libstdc++</application> 是 GCC 源文件的一部分。你首先应该解压 GCC 的压缩包，然后进入 <filename>gcc-&gcc-version;</filename> 文件夹。</para>
    </note>

    <para>为 Libstdc++ 另外创建一个用于构建的文件夹并进入该文件夹：</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>准备编译 Libstdc++：</para>

<screen><userinput remap="configure">../libstdc++-v3/configure           \
    --host=$LFS_TGT                 \
    --prefix=/tools                 \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-threads     \
    --disable-libstdcxx-pch         \
    --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/&gcc-version;</userinput></screen>

    <variablelist>
      <title>配置选项的含义：</title>

      <varlistentry>
        <term><parameter>--host=...</parameter></term>
        <listitem>
          <para>指示使用我们刚才编译的交叉编译器，而不是  <filename>/usr/bin</filename> 中的。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-libstdcxx-threads</parameter></term>
        <listitem>
          <para>由于我们还没有编译 C 线程库，C++ 的也还不能编译。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-libstdcxx-pch</parameter></term>
        <listitem>
          <para>此选项防止安装预编译文件，此步骤并不需要。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-gxx-include-dir=/tools/$LFS_TGT/include/c++/&gcc-version;</parameter></term>
        <listitem>
          <para>这是 C++ 编译器搜索标准 include 文件的位置。在一般的编译中，这个信息自动从顶层文件夹中传入 Libstdc++ <command>configure</command> 选项。在我们的例子中，必须明确给出这信息。</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>编译 libstdc++：</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>安装库：</para>

<screen><userinput remap="install">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>该软件包的详细信息请参见：
    <xref linkend="contents-gcc"/>。</para>

  </sect2>

</sect1>
