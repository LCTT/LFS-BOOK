<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-findutils" role="wrap">
  <?dbhtml filename="findutils.html"?>

  <sect1info condition="script">
    <productname>findutils</productname>
    <productnumber>&findutils-version;</productnumber>
    <address>&findutils-url;</address>
  </sect1info>

  <title>Findutils-&findutils-version;</title>

  <indexterm zone="ch-system-findutils">
    <primary sortas="a-Findutils">Findutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Findutils 软件包包含查找文件的程序。这些程序提供递归搜索目录树、创建、管理以及搜索数据库（通常比递归式的 find 要快，但如果数据库最近没有更新的话结果不可靠）。</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&findutils-ch6-sbu;</seg>
        <seg>&findutils-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>安装 Findutils</title>

   <!-- this has been fixed in upstream gnulib, when a new version of
   findutils is released, please check #4055 to see if the change has been
   picked up in this package -->
   <para>首先，抑制测试中可能在某些机器中出现的无限循环：</para>

<screen><userinput remap="pre">sed -i 's/test-lock..EXEEXT.//' tests/Makefile.in</userinput></screen>

    <para>然后，对应 glibc-2.28 或更高版本 glibc 的需求做一些修复：</para>

<screen><userinput remap="pre">sed -i 's/IO_ftrylockfile/IO_EOF_SEEN/' gl/lib/*.c
sed -i '/unistd/a #include &lt;sys/sysmacros.h&gt;' gl/lib/mountlist.c
echo "#define _IO_IN_BACKUP 0x100" >> gl/lib/stdio-impl.h</userinput></screen>

    <para>准备编译 Findutils：</para>

<screen><userinput remap="configure">./configure --prefix=/usr --localstatedir=/var/lib/locate</userinput></screen>

    <variablelist>
      <title>配置选项的含义：</title>

      <varlistentry>
        <term><parameter>--localstatedir</parameter></term>
        <listitem>
          <para>该选项改变 <command>locate</command> 数据库的位置为 FHS 兼容的 <filename class="directory">/var/lib/locate</filename>。</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>编译软件包：</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>用以下命令测试结果：</para>

<screen><userinput remap="test">make check</userinput></screen>

    <para>安装软件包：</para>

<screen><userinput remap="install">make install</userinput></screen>

    <para revision="sysv">LFS-Bootscripts 包中的部分脚本依赖于 <command>find</command>。由于 <filename class="directory">/usr</filename> 在启动的早期阶段可能不可用，该程序需要被放置在根分区。<command>updatedb</command> 脚本也需要修改，以明确的路径更正：</para>

    <para revision="systemd">一些 BLFS 及之上的软件包希望 <command>find</command> 程序在 <filename class="directory">/bin</filename>，因此确保位置正确：</para>

<screen><userinput remap="install">mv -v /usr/bin/find /bin
sed -i 's|find:=${BINDIR}|find:=/bin|' /usr/bin/updatedb</userinput></screen>

  </sect2>

  <sect2 id="contents-findutils" role="content">
    <title>Findutils 软件包内容</title>

    <segmentedlist>
      <segtitle>安装的程序</segtitle>
      <segtitle>安装的目录</segtitle>

      <seglistitem>
        <seg>find, locate, updatedb, 和 xargs</seg>
        <seg>/var/lib/locate</seg>
      </seglistitem>
      
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">简要介绍</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="find">
        <term><command>find</command></term>
        <listitem>
          <para>查找指定目录树中匹配特定要求的文件</para>
          <indexterm zone="ch-system-findutils find">
            <primary sortas="b-find">find</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="locate">
        <term><command>locate</command></term>
        <listitem>
          <para>搜索文件名称数据库并报告包含给定字符串或匹配给定模式的文件名称</para>
          <indexterm zone="ch-system-findutils locate">
            <primary sortas="b-locate">locate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="oldfind">
        <term><command>oldfind</command></term>
        <listitem>
          <para>老版本的 find，使用一个不同的算法</para>
          <indexterm zone="ch-system-findutils oldfind">
            <primary sortas="b-oldfind">oldfind</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="updatedb">
      <term><command>updatedb</command></term>
        <listitem>
          <para>更新 <command>locate</command> 数据库； 它搜索整个文件系统（包括已挂载的其它文件系统，除非指定排除） 并把找到的每个文件名插入到数据库</para>
          <indexterm zone="ch-system-findutils updatedb">
            <primary sortas="b-updatedb">updatedb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xargs">
        <term><command>xargs</command></term>
        <listitem>
          <para>对一系列文件运行给定命令</para>
          <indexterm zone="ch-system-findutils xargs">
            <primary sortas="b-xargs">xargs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
