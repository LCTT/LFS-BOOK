<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-aboutdebug">
  <?dbhtml filename="aboutdebug.html"?>

  <title>关于调试符号</title>

  <para>默认情况下大多数程序和库的编译带有调试符号。（类似 <command>gcc</command> 的 <parameter>-g</parameter> 选项。）这意味着当你调试一个包含调试信息的已编译的程序或库时，调试程序不仅能提供内存地址，还能提供变量和实例的名字。</para>

  <para>然而，包含这些调试符号明显的增大了程序或库。下面这个例子说明了这些符号有多么占地方：</para>

  <itemizedlist>
    <listitem>
      <para>有调试符号的二进制 <command>bash</command>：1200 KB</para>
    </listitem>
    <listitem>
      <para>无调试符号的二进制 <command>bash</command>：480 KB</para>
    </listitem>
    <listitem>
      <para>有调试符号的 Glibc 和 GCC 文件（<filename class="directory">/lib</filename> 和 <filename class="directory">/usr/lib</filename>）：87 MB</para>
    </listitem>
    <listitem>
      <para>无调试符号的 Glibc 和 GCC 文件：16 MB</para>
    </listitem>
  </itemizedlist>

  <para>大小可能会因为所使用的编译器和 C 语言库的不同而改变，但是当比较有无调试符号的程序时，大小可能相差 2 到 5 倍。</para>

  <para>因为大多数用户从来不会在他们的系统软件上使用调试器，没了这些调试符号可以省下很多磁盘空间。下一页将会告诉你如何剥离程序和库中所有的调试符号。</para>

</sect1>
