<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-binutils" role="wrap">
  <?dbhtml filename="binutils.html"?>

  <sect1info condition="script">
    <productname>binutils</productname>
    <productnumber>&binutils-version;</productnumber>
    <address>&binutils-url;</address>
  </sect1info>

  <title>Binutils-&binutils-version;</title>

  <indexterm zone="ch-system-binutils">
    <primary sortas="a-Binutils">Binutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Binutils 软件包包含一个链接器、一个汇编器、以及其它处理目标文件的工具。</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&binutils-ch6-sbu;</seg>
        <seg>&binutils-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>安装 Binutils</title>

    <para>通过一个简单测试验证在 chroot 环境下 PTY 工作正常：</para>

<screen><userinput remap="test">expect -c "spawn ls"</userinput></screen>

    <para>这个命令应该输出以下内容：</para>

<screen><computeroutput>spawn ls</computeroutput></screen>

    <para>假如输出包括下面的信息，那么表示没有为 PTY 操作设置好环境。在运行 Binutils 和 GCC 的测试套件之前需要解决这个问题：</para>

<screen><computeroutput>The system has no more ptys.
Ask your system administrator to create more.</computeroutput></screen>

    <para>Binutils 的文档建议在一个专用的编译目录中编译 Binutils：</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>配置 Binutils 准备编译：</para>

<screen><userinput remap="configure">../configure --prefix=/usr       \
             --enable-gold       \
             --enable-ld=default \
             --enable-plugins    \
             --enable-shared     \
             --disable-werror    \
             --enable-64-bit-bfd \
             --with-system-zlib</userinput></screen>
    <variablelist>
      <title>配置参数的意义：</title>

      <varlistentry>
        <term><parameter>--enable-gold</parameter></term>
        <listitem>
          <para>构建 gold 链接器并将其安装为 ld.gold（紧挨着默认链接器）。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-ld=default</parameter></term>
        <listitem>
          <para>构建原来的 bdf 链接器并将其安装为 ld（默认链接器）和 ld.bfd。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-plugins</parameter></term>
        <listitem>
          <para>为链接器启用插件支持。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-64-bit-bfd</parameter></term>
        <listitem>
           <para>启用 64 位支持（针对字宽较窄的主机）。64 位系统可能没什么必要，但也不会有什么坏处。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-system-zlib</parameter></term>
        <listitem>
          <para>使用安装的 zlib 库替代自带的版本构建。</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>编译软件包：</para>

<screen><userinput remap="make">make tooldir=/usr</userinput></screen>

    <variablelist>
      <title>make 参数的含义:</title>

      <varlistentry>
        <term><parameter>tooldir=/usr</parameter></term>
        <listitem>
          <para>一般来说，tooldir (最终存放可执行文件的目录) 设置为 <filename class="directory">$(exec_prefix)/$(target_alias)</filename>。例如，x86_64 机器会把它扩展为 <filename class="directory">/usr/x86_64-unknown-linux-gnu</filename>。因为这是个自定制的系统，并不需要 <filename
          class="directory">/usr</filename>中的特定目标目录。如果系统用于交叉编译（例如，在 Intel 机器上编译能生成在 PowerPC 机器上运行的代码的软件包）会使用 <filename
          class="directory">$(exec_prefix)/$(target_alias)</filename>。</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <important>
      <para>本章节中的 Binutils 测试套件至关重要，任何情况下都不能跳过。</para>
    </important>

    <para>查看结果：</para>

<screen><userinput remap="test">make -k check</userinput></screen>

    <para>已知一个测试 debug_msg.sh 会失败。</para>

    <para>安装软件包：</para>

<screen><userinput remap="install">make tooldir=/usr install</userinput></screen>

  </sect2>

  <sect2 id="contents-binutils" role="content">
    <title>Binutils 内容</title>

    <segmentedlist>
      <segtitle>安装的程序</segtitle>
      <segtitle>安装的库</segtitle>
      <segtitle>安装目录</segtitle>

      <seglistitem>
        <seg>addr2line, ar, as, c++filt, elfedit, gprof, ld, ld.bfd, ld.gold, nm,
        objcopy, objdump, ranlib, readelf, size, strings, 和 strip</seg>
        <seg>libbfd.{a,so} 和 libopcodes.{a,so}</seg>
        <seg>/usr/lib/ldscripts</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">简要介绍</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="addr2line">
        <term><command>addr2line</command></term>
        <listitem>
          <para>转换程序地址为文件名称和行号；给定一个地址和可执行文件的名称，它使用可执行文件中的调试信息来判断与该地址关联的源文件以及行号。</para>
          <indexterm zone="ch-system-binutils addr2line">
            <primary sortas="b-addr2line">addr2line</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ar">
        <term><command>ar</command></term>
        <listitem>
          <para>创建、更改以及抽取归档文件。</para>
          <indexterm zone="ch-system-binutils ar">
            <primary sortas="b-ar">ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="as">
        <term><command>as</command></term>
        <listitem>
          <para>一个将 <command>gcc</command> 的输出汇编到目标文件的汇编器。</para>
          <indexterm zone="ch-system-binutils as">
            <primary sortas="b-as">as</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="c-filt">
        <term><command>c++filt</command></term>
        <listitem>
          <para>链接器用来过滤 C++ 和 Java 符号以及防止重载函数冲突。</para>
          <indexterm zone="ch-system-binutils c-filt">
            <primary sortas="b-c++filt">c++filt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="elfedit">
        <term><command>elfedit</command></term>
        <listitem>
          <para>更新 ELF 文件的 ELF 文件头。</para>
          <indexterm zone="ch-system-binutils elfedit">
            <primary sortas="b-elfedit">elfedit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gprof">
        <term><command>gprof</command></term>
        <listitem>
          <para>显示调用关系图配置数据。</para>
          <indexterm zone="ch-system-binutils gprof">
            <primary sortas="b-gprof">gprof</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld">
        <term><command>ld</command></term>
        <listitem>
          <para>一个将多个目标文件和归档文件合并为单一文件，重定位数据及绑定符号引用的链接器。</para>
          <indexterm zone="ch-system-binutils ld">
            <primary sortas="b-ld">ld</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.gold">
        <term><command>ld.gold</command></term>
        <listitem>
          <para>一个阉割版的 ld，仅支持 elf 对象文件格式</para>
          <indexterm zone="ch-system-binutils ld.gold">
            <primary sortas="b-ld.gold">ld.gold</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.bfd">
        <term><command>ld.bfd</command></term>
        <listitem>
          <para>到 <command>ld</command> 的硬链接。</para>
          <indexterm zone="ch-system-binutils ld.bfd">
            <primary sortas="b-ld.bfd">ld.bfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nm">
        <term><command>nm</command></term>
        <listitem>
          <para>列出指定目标文件中出现的符号。</para>
          <indexterm zone="ch-system-binutils nm">
            <primary sortas="b-nm">nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objcopy">
        <term><command>objcopy</command></term>
        <listitem>
          <para>转换某种类型的目标文件到另一种类型。</para>
          <indexterm zone="ch-system-binutils objcopy">
            <primary sortas="b-objcopy">objcopy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objdump">
        <term><command>objdump</command></term>
        <listitem>
          <para>显示给定目标文件的信息，用选项可以控制显示特定信息；显示的信息对于使用编译工具的程序员非常有用。</para>
          <indexterm zone="ch-system-binutils objdump">
            <primary sortas="b-objdump">objdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ranlib">
        <term><command>ranlib</command></term>
        <listitem>
          <para>生成归档文件内容的索引并保存到归档文件；索引列出了所有归档文件成员——可重定位的目标文件定义的符号。</para>
          <indexterm zone="ch-system-binutils ranlib">
            <primary sortas="b-ranlib">ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="readelf">
        <term><command>readelf</command></term>
        <listitem>
          <para>显示 ELF 类型的二进制文件的信息。</para>
          <indexterm zone="ch-system-binutils readelf">
            <primary sortas="b-readelf">readelf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="size">
        <term><command>size</command></term>
        <listitem>
          <para>列出所给目标文件各部分大小和总的大小。</para>
          <indexterm zone="ch-system-binutils size">
            <primary sortas="b-size">size</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strings">
        <term><command>strings</command></term>
        <listitem>
          <para>对每个给定文件，输出不低于指定长度（默认是4）的可打印字符序列；对于目标文件，它默认只打印初始化和引导部分的字符串，而对于其它类型的文件扫描整个文件。</para>
          <indexterm zone="ch-system-binutils strings">
            <primary sortas="b-strings">strings</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strip">
        <term><command>strip</command></term>
        <listitem>
          <para>从目标文件中去除符号。</para>
          <indexterm zone="ch-system-binutils strip">
            <primary sortas="b-strip">strip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libbfd">
        <term><filename class="libraryfile">libbfd</filename></term>
        <listitem>
          <para>二进制文件描述库。</para>
          <indexterm zone="ch-system-binutils libbfd">
            <primary sortas="c-libbfd">libbfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libopcodes">
        <term><filename class="libraryfile">libopcodes</filename></term>
        <listitem>
          <para>一个库用于处理操作码——「可读文本」版的处理器指令；用于构建类似 <command>objdump</command> 的工具。</para>
          <indexterm zone="ch-system-binutils libopcodes">
            <primary sortas="c-libopcodes">libopcodes</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
